// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/xcloudnative/xcloud/pkg/apis/xcloudnative.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// XflowLister helps list Xflows.
type XflowLister interface {
	// List lists all Xflows in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Xflow, err error)
	// Xflows returns an object that can list and get Xflows.
	Xflows(namespace string) XflowNamespaceLister
	XflowListerExpansion
}

// xflowLister implements the XflowLister interface.
type xflowLister struct {
	indexer cache.Indexer
}

// NewXflowLister returns a new XflowLister.
func NewXflowLister(indexer cache.Indexer) XflowLister {
	return &xflowLister{indexer: indexer}
}

// List lists all Xflows in the indexer.
func (s *xflowLister) List(selector labels.Selector) (ret []*v1alpha1.Xflow, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Xflow))
	})
	return ret, err
}

// Xflows returns an object that can list and get Xflows.
func (s *xflowLister) Xflows(namespace string) XflowNamespaceLister {
	return xflowNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// XflowNamespaceLister helps list and get Xflows.
type XflowNamespaceLister interface {
	// List lists all Xflows in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Xflow, err error)
	// Get retrieves the Xflow from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Xflow, error)
	XflowNamespaceListerExpansion
}

// xflowNamespaceLister implements the XflowNamespaceLister
// interface.
type xflowNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Xflows in the indexer for a given namespace.
func (s xflowNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Xflow, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Xflow))
	})
	return ret, err
}

// Get retrieves the Xflow from the indexer for a given namespace and name.
func (s xflowNamespaceLister) Get(name string) (*v1alpha1.Xflow, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("xflow"), name)
	}
	return obj.(*v1alpha1.Xflow), nil
}
